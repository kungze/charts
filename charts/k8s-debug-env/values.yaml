# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for keystone.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

---
## @section 镜像仓库
## @param imageRegistry 镜像仓库，国内的可以换成 registry.aliyuncs.com
imageRegistry: "docker.io"

## @section 宿主机相关参数
## @param hostConf.nodePort pod 映射到宿主机上的端口，可通过 ssh 访问这个端口进入 pod 容器
## @param hostConf.dockerSocketPath 如果 cri 使用的是 docker，并且想在 pod 内部执行 docker 命令控制宿主机上的容器，需要传入宿主机上的 docker sockt 的路径，如：/var/run/docker.sock
## @param hostConf.homeDirPath 该目录（在宿主机上）会映射为 pod 容器内的 /home 目录，pod 内唯有 /home 目录下的数据会被持久保存，后面计划使用 pv 替换 hostdir
hostConf:
  nodePort: 30022
  homeDirPath: /data/ubuntu
  dockerSocketPath: ""

## @section 容器内用户和用户组
## @param containerConf.userName ssh 用户名，在 pod 启动时会自动创建
## @param containerConf.userGroup  用户组，pod  启动时会自动创建
## @param containerConf.userPassword 用户密码，可以在 pod 启动后 ssh 登录修改，但是 pod 重建后会恢复该密码
containerConf:
  userName: ubuntu
  userGroup: ubuntu
  userPassword: ChangeMe

## @section 配置 kubeconfig

## 借助 kubectl config 命令生成 ~/.kube/config 文件
kubeConfig:
  ## @param kubeConfig.clusterName 对应 ~/.kube/config 中的 cluster.name
  clusterName: ""
  ## @param kubeConfig.clusterApiServer 对应 ~/.kube/config 中的 cluster.server
  clusterApiServer: ""
  ## @param kubeConfig.clusterCaData 对应 ~/.kube/config 中的 cluster.certificate-authority-data，需要经过 base64 加密
  clusterCaData: ""
  ## @param kubeConfig.userName 对应 ~/.kube/config 中的 users[0].name
  userName: ""
  ## @param kubeConfig.userPassword 对应 ~/.kube/config 中的 users[0].user.password
  userPassword: ""
  ## @param kubeConfig.userClientCaData 对应 ~/.kube/config 中的 users[0].user.client-certificate-data，需要经过 base64 加密
  userClientCaData: ""
  ## @param kubeConfig.userClientKeyData 对应 ~/.kube/config 中的 users[0].user.client-key-data，需要经过 base64 加密
  userClientKeyData: ""
