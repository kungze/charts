## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.storageClass Global StorageClass for Persistent Volume(s)
## @param global.imageTag Global docker image tag
## @param global.pullPolicy Global image pull policy
global:
  imageRegistry: docker.io
  storageClass: ""
  imageTag: xena
  pullPolicy: IfNotPresent

## @section Common parameters
## @param helm3_hook enable helm3
helm3_hook: true
## @param replicaCount Number of keystone replicas to deploy (requires ReadWriteMany PVC support)
replicaCount: 1
## @param serviceAccountName ServiceAccount name
serviceAccountName: keystone
## Controller containers' resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param resources.limits The resources limits for the Controller container
## @param resources.requests The requested resources for the Controller container
resources:
  ## Example:
  ## limits:
  ##    cpu: 250m
  ##    memory: 256Mi
  limits: {}
  ## Examples:
  ## requests:
  ##    cpu: 250m
  ##    memory: 256Mi
  requests: {}
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled keystone pods' Security Context
## @param podSecurityContext.runAsUser Set keystone container's Security Context runAsUser
podSecurityContext:
  enabled: true
  runAsUser: 0
## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled keystone containers' Security Context
## @param containerSecurityContext.runAsUser Set keystone container's Security Context runAsUser
containerSecurityContext:
  enabled: true
  runAsUser: 0
## Controller containers' liveness probe. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.httpGet.path Request path for livenessProbe
## @param livenessProbe.httpGet.port Port for livenessProbe
## @param livenessProbe.httpGet.scheme Scheme for livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
livenessProbe:
  enabled: true
  httpGet:
    path: /v3/
    port: 5000
    scheme: HTTP
  failureThreshold: 3
  initialDelaySeconds: 50
  periodSeconds: 60
  successThreshold: 1
  timeoutSeconds: 15
## Controller containers' readiness probe. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.httpGet.path Request path for readinessProbe
## @param readinessProbe.httpGet.port Port for readinessProbe
## @param readinessProbe.httpGet.scheme Scheme for readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
readinessProbe:
  enabled: true
  httpGet:
    path: /v3/
    port: 5000
    scheme: HTTP
  failureThreshold: 3
  initialDelaySeconds: 50
  periodSeconds: 60
  successThreshold: 1
  timeoutSeconds: 15
## @param customLivenessProbe Override default liveness probe
customLivenessProbe: {}
## @param customReadinessProbe Override default readiness probe
customReadinessProbe: {}
## @param lifecycle LifecycleHooks to set additional configuration at startup
lifecycle: ""

## @section Keystone Image parameters

## openstack Keystone image
image:
  ## @param image.keystoneAPI.repository Moodle image repository
  keystoneAPI:
    repository: kolla/ubuntu-binary-keystone
  ## @param image.dbSync.repository Moodle image repository
  dbSync:
    repository: kolla/ubuntu-binary-keystone
  ## @param image.kollaToolbox.repository Moodle image repository
  kollaToolbox:
    repository: kolla/ubuntu-binary-kolla-toolbox
  ## @param image.entrypoint.registry Moodle image registry
  ## @param image.entrypoint.repository Moodle image repository
  ## @param image.entrypoint.tag Moodle image tag (immutable tags are recommended)
  entrypoint:
    registry: quay.io
    repository: airshipit/kubernetes-entrypoint
    tag: v1.0.0

## @skip conf
conf:
  keystone:
    provider: fernet
    expiration: 86400
    allow_expired_window: 172800

## @skip dependencies
dependencies:
  keystone_api:
    jobs:
      - keystone-fernet-setup
      - keystone-bootstrap
  cm_render:
    jobs:
      - keystone-update-openstack-conn-info
  db_init:
    jobs:
      - keystone-cm-render
  db_sync:
    jobs:
      - keystone-db-init
  bootstrap:
    jobs:
      - keystone-db-sync
  register:
    service:
      - keystone-api
  fernet_rotate:
    jobs:
      - keystone-fernet-setup

## @skip jobs
jobs:
  fernet_setup:
    user: keystone
    group: keystone
  fernet_rotate:
    # NOTE(rk760n): key rotation frequency, token expiration, active keys should statisfy the formula
    # max_active_keys = (token_expiration / rotation_frequency) + 2
    # as expiration is 12h, and max_active_keys set to 3 by default, rotation_frequency need to be adjusted
    # 12 hours
    cron: "0 */12 * * *"
    user: keystone
    group: keystone
    history:
      success: 3
      failed: 1

## @skip endpoints
endpoints:
  cluster_domain_suffix: cluster.local
  auth:
    secretName: keystone-admin-secret
    admin:
      region_name: RegionOne
      username: admin
      project_name: admin
      user_domain_name: default
      project_domain_name: default
      default_domain_id: default
      interface: internal
      os_internal_url: ""
      os_auth_url: ""
      version: "3"
## @skip database
database:
  username: keystone
  database: keystone
  port: 3306

## @section Traffic Exposure Parameters

## Keystone service parameters
service:
  ## @param service.type Kubernetes Service type
  type: ClusterIP
  ## @param service.publicService.name keystone public svc name
  ## @param service.publicService.port keystone public svc port
  ## @param service.publicService.portname keystone public svc port name
  publicService:
    name: keystone-api
    port: 5000
    portname: ks-pub
  ## @param service.internalService.name keystone internal svc name
  ## @param service.internalService.httpPort keystone internal svc http port
  ## @param service.internalService.httpName keystone internal svc http port name
  ## @param service.internalService.httpsPort keystone internal svc https port
  ## @param service.internalService.httpsName keystone internal svc https port name
  internalService:
    name: keystone
    httpPort: 80
    httpName: http
    httpsPort: 443
    httpsName: https
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.https Node port for HTTPS
  ## NOTE: choose port between <30000-32767>
  nodePorts:
    http: ""
    https: ""
  ## @param service.clusterIP Cluster internal IP of the service
  ## This is the internal IP address of the service and is usually assigned randomly.
  ## ref: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/#ServiceSpec
  clusterIP: ""
  ## @param service.loadBalancerIP keystone service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  loadBalancerIP: ""
  ## @param service.externalTrafficPolicy keystone service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  externalTrafficPolicy: Cluster
## Configure the ingress resource that allows you to access the keystone installation
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  ## @param ingress.enabled Enable ingress record generation for keystone
  enabled: true
  ## @param ingress.pathType Ingress path type
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  apiVersion: ""
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ingressClassName: "nginx"
  ## @param ingress.hostname Default host for the ingress record
  hostname: keystone
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  path: /

## @section openstack dependency env
## @param openstack-dep.enabled [t#安裝 openstack-dep] 安装openstack依赖环境，包含mariadb;rabbitmq;memcached 等...
openstack-dep:
  enabled: true
  ## @param openstack-dep.connInfoSecret [t#ConnInfo secret name] openstack 依赖环境中生成服务URL得 secret 名称
  ## @param openstack-dep.passwordSecretName [t#Password secret name] openstack 依赖环境中自动生成服务相关密码得 secret 名称
  connInfoSecret: openstack-conn-info
  passwordSecretName: openstack-password
